<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.letv.mms.dao.IContentRelDAO">
	<!-- Result Map -->
	<resultMap id="BaseResultMap" type="ParentChildContentRel">
		<result column="CONTENT_ID_A" property="firstNode.contentId" />
		<result column="CONTENT_ID_B" property="secondNode.contentId" />
		<result column="RELATIONSHIP" property="relType" />
		<result column="DELETED" property="deleted" />
	</resultMap>

	<!-- CON_CONTENT_RELATIONSHIP_INFO table all fields -->
	<sql id="Base_Column_List">
		CONTENT_ID_A,CONTENT_ID_B,RELATIONSHIP,DELETED
	</sql>

	<!-- 查询条件 -->
	<sql id="Example_Where_Clause">
		where 1=1
		<trim suffixOverrides=",">
			<if test="firstNode !=null and firstNode.contentId != null  ">
				and CONTENT_ID_A=#{firstNode.contentId}
			</if>
			<if test="secondNode !=null and secondNode.contentId != null  ">
				and CONTENT_ID_B=#{secondNode.contentId}
			</if>
			<if test="relType != null  ">
				and RELATIONSHIP=#{relType}
			</if>
			<if test="deleted != null  ">
				and DELETED=#{deleted}
			</if>
		</trim>
	</sql>


	<!-- 插入记录 -->
	<insert id="insert" parameterType="ParentChildContentRel">
		insert into
		CON_CONTENT_RELATIONSHIP_INFO(CONTENT_ID_A,CONTENT_ID_B,RELATIONSHIP,DELETED)
		values(#{firstNode.contentId},#{secondNode.contentId},#{relType},#{deleted})
	</insert>

	<!-- 根据id，修改记录 -->
	<update id="update" parameterType="ParentChildContentRel">
		update CON_CONTENT_RELATIONSHIP_INFO 
		set CONTENT_ID_A=#{firstNode.contentId},RELATIONSHIP=#{relType} 
		<include refid="Example_Where_Clause" />
	</update>

	<!-- 逻辑删除，将isDelete 改成 0 -->
	<update id="delete" parameterType="ParentChildContentRel">
		update CON_CONTENT_RELATIONSHIP_INFO 
		set DELETED=true  
		<include refid="Example_Where_Clause" />
	</update>
	
	<!-- 让更新失效 -->
	<update id="updateBySelective" parameterType="ParentChildContentRel">
		update CON_CONTENT_RELATIONSHIP_INFO set
		<trim suffixOverrides=",">
			<if test="firstNode.contentId != null  ">
				CONTENT_ID_A=#{firstNode.contentId},
			</if>
			<if test="secondNode.contentId != null">
				CONTENT_ID_B=#{secondNode.contentId},
			</if>
			<if test="relationship != null  ">
				RELATIONSHIP=#{relType},
			</if>
		</trim>
		<include refid="Example_Where_Clause" />
	</update>

	<!-- 让这个方法失效 -->
	<select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from CON_CONTENT_RELATIONSHIP_INFO 
		where CONTENT_ID_A = #{firstNode.contentId} and 
		CONTENT_ID_B=#{secondNode.contentId} and DELETED = true
	</select>

	<!-- 列表总数 -->
	<select id="selectByModelCount" resultType="java.lang.Integer" parameterType="ParentChildContentRel">
		select count(1) from CON_CONTENT_RELATIONSHIP_INFO
		<include refid="Example_Where_Clause" />
	</select>

	<!-- 根据id查询 -->
	<select id="selectByModel" resultMap="BaseResultMap" parameterType="ParentChildContentRel">
		select
		<include refid="Base_Column_List" />
		from CON_CONTENT_RELATIONSHIP_INFO
		<include refid="Example_Where_Clause" />
	</select>
	
	<!-- 根据id查询 -->
	<select id="selectUniqueByModel" resultMap="BaseResultMap"
		parameterType="ParentChildContentRel">
		select
		<include refid="Base_Column_List" />
		from CON_CONTENT_RELATIONSHIP_INFO
		<include refid="Example_Where_Clause" />
	</select>


	<!-- 列表总数 -->
	<select id="selectByMapCount" resultType="java.lang.Integer" parameterType="java.util.Map">
		select count(1) from CON_CONTENT_RELATIONSHIP_INFO
		<include refid="Example_Where_Clause" />
	</select>

	<!-- 根据id查询 -->
	<select id="selectByMap" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		from CON_CONTENT_RELATIONSHIP_INFO
		<include refid="Example_Where_Clause" />
	</select>
</mapper>   
