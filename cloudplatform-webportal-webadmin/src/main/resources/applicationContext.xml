<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">
	
	<!-- <import resource="classpath:converter-applicationContext.xml"/> -->
	<import resource="classpath*:data-applicationContext.xml"/>
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
	    <property name="locations">
		    <list> 
			    <value>classpath:jdbc.properties</value>
			    <value>classpath:config.properties</value> 
		    </list> 
	    </property>
    </bean>
	
	 <!-- 异常处理 -->
    <bean id="exceptionResolver"
		class="com.letv.common.spring.DefaultMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.Exception">error/500</prop>
			</props>
		</property>
	</bean>
    
	<!-- 配置RestTemplate -->
        <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">  
        	<property name="messageConverters">
        		<list>
        			<bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
					</bean>
					<bean id="formHttpMessageConverter" class="org.springframework.http.converter.FormHttpMessageConverter"/>
					<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"/>
        		</list>
        	</property>
        </bean>
        
          <!-- 要调用的工作类 -->
	   <bean id="quartzJob" class="com.letv.portal.job.QuartzJob"></bean>
	   
	   <!-- 定义调用对象和调用对象的方法 -->
	   <bean id="jobtask" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
	       <!-- 调用的类 -->
	       <property name="targetObject" ref="quartzJob"/>
	       <!-- 调用类中的方法 -->
	       <property name="targetMethod" >
	           <value>work</value>
	       </property>
	   </bean>
	   
	   <!-- 定义触发时间 -->
	   <bean id="doTime" class="org.springframework.scheduling.quartz.CronTriggerBean">
	       <property name="jobDetail" ref="jobtask"/>
	       <!-- cron表达式 -->
	       <property name="cronExpression">
	           <value>0 0/1 * * * ?</value>
	       </property>
	   </bean>
	   <!-- 总管理类 如果将lazy-init='false'那么容器启动就会执行调度程序  -->
	   <bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
	       <property name="triggers">
	           <list>
	               <ref bean="doTime"/>
	           </list>
	       </property>
	   </bean>
</beans>
